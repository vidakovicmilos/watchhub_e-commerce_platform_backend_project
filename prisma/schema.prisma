generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
  SUPERADMIN
}

enum Gender {
  MALE
  FEMALE
  UNISEX
}

enum Status {
  PENDING
  REJECTED
  APPROVED
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  firstName String
  lastName  String
  role      Role      @default(USER)
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  reviews   Review[]
  Product   Product[]

  @@map("users")
}

model Brand {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  products Product[]

  @@map("brands")
}

model Product {
  id            Int       @id @default(autoincrement())
  name          String
  gender        Gender
  description   String
  price         Float
  discount      Float     @default(0)
  finalPrice    Float?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime? @updatedAt
  status        Status    @default(PENDING)
  averageRating Float?

  brandId Int
  brand   Brand @relation(fields: [brandId], references: [id])

  creatorId Int
  user      User @relation(fields: [creatorId], references: [id])

  reviews Review[]

  @@map("products")
}

model Review {
  id     Int     @id @default(autoincrement())
  rating Int
  text   String?

  userId Int
  user   User @relation(fields: [userId], references: [id])

  productId Int
  product   Product @relation(fields: [productId], references: [id])

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  @@unique([userId, productId])
  @@map("reviews")
}
